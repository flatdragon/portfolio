name: Main Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

jobs:
  deploy-backend-app-to-heroku:
    name: Deploy Backend to Heroku
    runs-on: ubuntu-20.04
    env:
      HEROKU_APP: ${{ secrets.HEROKU_BACKEND_APP }}
      REPO: ${{ github.repository }}
      SHA: $(echo "${{ github.sha }}" | cut -c1-7)
    steps:

      - name: Checkout Main Branch
        uses: actions/checkout@v2
        with:
          path: sources

      - name: Login to Heroku
        run: heroku container:login

      - name: Create Backend App at Heroku (Conditionally)
        run: |
          if [ -z "$(heroku apps:info --shell)" ]
          then
            echo "Backend app doesn't exists. Start creating..."
            heroku apps:create $HEROKU_APP --region eu
            heroku addons:create heroku-postgresql:hobby-dev
            heroku buildpacks:add heroku/php
            heroku buildpacks:add heroku/nodejs
            echo "Backend app is successfully created. Going to the next step..."
          else
            echo "Backend app exists. Going to the next step..."
          fi

      - name: Create Temporary Directory for Deployment
        run: mkdir deployment

      - name: Connect to Heroku Git
        run: |
          cd deployment
          git init
          git config user.name github-actions
          git config user.email github-actions@github.com
          git remote add heroku https://heroku:${HEROKU_API_KEY}@git.heroku.com/${HEROKU_APP}.git

      - name: Enter Maintenance Mode at Heroku
        run: |
          heroku maintenance:on
          heroku config:set APP_ENV="staging"

      - name: Commit Backend Changes
        run: |
          cd deployment
          
          if [ ! -z "$(git ls-remote --heads heroku master)" ]
          then
            git pull --ff-only heroku master
          fi
          
          cp -a ../sources/backend/. .

          if [ -z "$(git status --porcelain)" ]
          then
            echo "Backend is up to date. Going to the next step..."
          else
            git add .
            git commit -m "deploy backend app from https://github.com/${REPO}/tree/${SHA}"
            git push heroku master
          fi

      - name: Set Backend Env Variables
        run: |
          heroku config:set APP_URL=$(heroku apps:info --shell | grep web_url | cut -d= -f2)

          if [ -z "$(heroku config:get APP_KEY)" ]
          then
            heroku config:set APP_KEY=$(heroku run php artisan key:generate --show)
          fi

          if [ -z "$(heroku config:get DATABASE_URL)" ]
          then
            heroku config:set DATABASE_URL=$(heroku config:get HEROKU_POSTGRESQL)
          fi

      - name: Migrate Database
        run: heroku run php artisan migrate

      - name: Leave Maintenance Mode at Heroku
        run: |
          heroku config:set APP_ENV="production"
          heroku maintenance:off
