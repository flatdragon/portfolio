name: Main Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

jobs:

  deploy-backend-app-to-heroku:
    name: Deploy Backend to Heroku
    runs-on: ubuntu-20.04
    env:
      HEROKU_APP: ${{ secrets.HEROKU_BACKEND_APP }}
    steps:

      - name: Checkout Main Branch
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: cd backend && composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Prepare Heroku and Deploy
        run: |
          heroku container:login

          if [ -z "$(heroku apps:info --shell)" ]
          then
            echo "Backend app doesn't exists. Start creating..."
            heroku apps:create $HEROKU_APP --region eu
            heroku addons:create heroku-postgresql:hobby-dev
            heroku buildpacks:add heroku/php
            heroku buildpacks:add heroku/nodejs
            echo "Backend app is successfully created. Keep deploying..."
          else
            echo "Backend app exists. Keep deploying..."
          fi

          heroku maintenance:on
          heroku config:set APP_ENV=$(echo "staging");

          if [ -z "$(heroku config:get APP_KEY)" ]
          then
            heroku config:set APP_KEY=$(php artisan key:generate --show);
          fi

          heroku config:set APP_URL=$(heroku apps:info --shell | grep web_url | cut -d= -f2);
          heroku config:set DATABASE_URL=$(heroku config:get HEROKU_POSTGRESQL);
          
          repo=${{ github.repository }}
          sha=$(echo "${{ github.sha }}" | cut -c1-7)
 
          cd backend

          git init
          git add .
          git commit -am "deploy backend app from https://github.com/${repo}/tree/${sha}"
          heroku git:remote
          git push heroku master

          heroku run php artisan migrate

          heroku config:set APP_ENV=$(echo "production");
          heroku maintenance:off

